{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaust\\\\OneDrive\\\\Desktop\\\\domingo\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io(\"http://localhost:4000\");\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [stream, setStream] = useState(null);\n  const [me, setMe] = useState(\"\");\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentstream => {\n      setStream(currentstream);\n      myVideo.current.srcObject = currentstream;\n    });\n    socket.on(\"me\", id => setMe(id));\n    socket.on(\"calluser\", ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isRecievedCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answercall\", {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on(\"stream\", currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"calluser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on(\"stream\", currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on(\"callaccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"GQd8nMXp8TqbdSqsvKF3xuNGd/w=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/kaust/OneDrive/Desktop/domingo/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","socket","ContextProvider","children","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentstream","current","srcObject","on","id","from","callerName","signal","isRecievedCall","answerCall","peer","initiator","trickle","data","emit","to","currentStream","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport Peer from \"simple-peer\";\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io(\"http://localhost:4000\");\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [stream, setStream] = useState(null);\r\n  const [me, setMe] = useState(\"\");\r\n  const [call, setCall] = useState({});\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then(currentstream => {\r\n        setStream(currentstream);\r\n        myVideo.current.srcObject = currentstream;\r\n      });\r\n\r\n    socket.on(\"me\", id => setMe(id));\r\n\r\n    socket.on(\"calluser\", ({ from, name: callerName, signal }) => {\r\n      setCall({ isRecievedCall: true, from, name: callerName, signal });\r\n    });\r\n  }, []);\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n    peer.on(\"signal\", data => {\r\n      socket.emit(\"answercall\", { signal: data, to: call.from });\r\n    });\r\n    peer.on(\"stream\", currentStream => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n    connectionRef.current = peer;\r\n  };\r\n  const callUser = id => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n    peer.on(\"signal\", data => {\r\n      socket.emit(\"calluser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: me,\r\n        name,\r\n      });\r\n    });\r\n    peer.on(\"stream\", currentStream => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on(\"callaccepted\", signal => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n\r\n    connectionRef.current.destroy();\r\n\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <SocketContext.Provider\r\n      value={{\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n        setName,\r\n        callEnded,\r\n        me,\r\n        callUser,\r\n        leaveCall,\r\n        answerCall,\r\n      }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };\r\n"]},"metadata":{},"sourceType":"module"}